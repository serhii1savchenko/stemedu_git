# Some utility strings
## Current locale: "en" or "ru"
util.locale = en



# Top navbar
## Welcome page
navbar.home = Home


## About, contacts
navbar.about = About
navbar.workbook = Workbook
navbar.help = Help
navbar.handbook = Handbook


## Language switch button
navbar.changelang = \u0420\u0443\u0441\u0441\u043a\u0438\u0439
navbar.changelang_locale = ru



# Sidebar: keyboards, indicators
kbd.memory = Free memory


## Numbers and fractions
kbd.num.title = Numbers, polynomials
### Functions with one argument
kbd.num.num.title = Numbers
kbd.num.num.max = The largest of the two numbers
kbd.num.num.min = The smallest of the two numbers
kbd.num.num.abs = Absolute value of the number
kbd.num.num.sign = Sign of the number
kbd.num.num.floor = Greatest integer that does not exceed this
kbd.num.num.ceil = Smallest integer which is not less than a given number
kbd.num.num.round = The number rounded to the nearest
kbd.num.num.isZero = Is equal to zero?
kbd.num.num.isOne = Is equal to zero?
kbd.num.num.isEven = Is even?
kbd.num.num.isNegative = Is strictly negative?
kbd.num.num.isInfinite = Is infinity?
kbd.num.num.random = The random number with b bits
# Integers
kbd.num.int.title = Integers
kbd.num.int.div = The integral part of the quotient a/b"
kbd.num.int.rem = The remainder of a divided by b
kbd.num.int.divRem = The integral part and\u00a0remainder of a divided by b"
kbd.num.int.ModCentered = The remainder of a divided by m in the range: [-(m-1)div 2, m div 2]"
kbd.num.int.mod = The remainder of a divided by m in the range: [0, m-1 ]"
kbd.num.int.Factorial = Factorial             
kbd.num.int.factor  = Factors of this integer number
kbd.num.int.gcd = GCD  
kbd.num.int.extgcd = [GCD,A,B] GCD and Bezout coefficients (A,B): aA+bB=GCD
# Fractions
kbd.num.frac.title = Fractions and rational functions
kbd.num.frac.num = numerator
kbd.num.frac.denom = denominator
kbd.num.frac.properForm = get integer part plus proper fraction
kbd.num.frac.quotientAndRemainder = Quotient and remainder when divided numerator by the denominator
kbd.num.frac.quotient = Quotient when divided numerator by the denominator
kbd.num.frac.remainder = Remainder when divided numerator by the denominator
kbd.num.frac.cancel = Cancel this fraction
kbd.num.frac.quotientAndRemainderx = Quotient and remainder when divided numerator by the denominator with main variable x
kbd.num.frac.quotientx =  Quotient when divided numerator by the denominator with main variable x
kbd.num.frac.remainderx = Remainder when divided numerator by the denominator with main variable x
kbd.num.pol.title= polynomials
kbd.num.pol.rootsOfPolynomial = Roots of polynomial"
kbd.num.pol.realRootsOfPolynomial =Real roots of polynomial
kbd.num.pol.complexRootsOfPolynomial = Complex roots of polynomial 
kbd.num.pol.solveNAE = get solution f nonlinear algebraic equations: f=0,g=0,...,h=0
kbd.num.pol.degrees = highest degree in each variable (in order of decreasing numbers of variables)
kbd.num.pol.degree = polynomial degree (for leading variable)
kbd.num.pol.PRS =polynomial remainder sequence of two polynomials (unsigned)
kbd.num.pol.GCDNumCf = GCD of the polynomial numerical coefficients
kbd.num.pol.GCDHCf = GCD of the polynomial coefficients of the highest variable, i.e. a polynomial of all other variables 
kbd.num.pol.quotientAndRemainderx =Quotient and remainder when divided a by b, with main variable x
kbd.num.pol.quotientx = Quotient when divided a by b, with main variable x
kbd.num.pol.remainderx = Remainder when divided a by b, with main variable x
kbd.num.pol.valuex = Calculation of the value of the one variable polynomial f(x) at the point x=a
kbd.num.pol.value = Calculation of the value of a polynomial of several variables f(x,y) at the point (x,y)=(a,b)
kbd.num.pol.gbasis = Groebner basis of polynomial ideal, generated by f,..,g
kbd.num.pol.reduceByGB =  reduces polynomial f with given set of polynomial p,..,q.
kbd.num.pol.GCD = greatest common divisor
kbd.num.pol.LCM = least common multiple
kbd.num.pol.leadingCoeff = leading coefficient, it is a number or a polynomial with a smaller number of variables
kbd.num.pol.randomPolynom = random polynomial with: d_1=highes degree_1,..,d_n=highes degree_n ,density=density in percents, bits= number of bits in coefficients
kbd.num.pol.extendedGCD = [GCD,A,B] GCD and Bezout coefficients (A,B): aA+bB=GCD for polynomials over the field. The highest variable is the main. The polynomial coefficients belong to the field of fractions.
kbd.num.pol.toVectorDence = vector with polynomial coefficients of highest variable. Its length is equal highest degree plus one. 
kbd.num.pol.toVectorSparce = vector with 2 n components. First n components are the nonzero coefficients. Last n components are their degrees.
kbd.num.pol.vectorToPolynom = is a polynomial of one variable which coefficients are the  components of this vector.
## Matrices
kbd.mat.title = Matrices
### Matrices general
kbd.mat.matr.title = Matrices and linear systems
kbd.mat.matr.solveLAE = Solve linear systems Ax=b. Input: (A,b) or (extA), extA is extended matrix
kbd.mat.matr.transpose = Transpose
kbd.mat.matr.inverse = Inverse
kbd.mat.matr.adjoint = Adjoint
kbd.mat.matr.det = Determinant
kbd.mat.matr.detL = Lagutinski determinant of order n with respect to the differentiation  p(x,y)dx+q(x,y)dy
kbd.mat.matr.conjugate = Conjugate
kbd.mat.matr.genInverse = Generalized inverse Murr-Penrose matrix
kbd.mat.matr.toEchelonForm = Echelon form
kbd.mat.matr.kernel = Kernel
kbd.mat.matr.charPolynom = Characteristic polynomial
kbd.mat.matr.LDU = LDU-decomposition: A=L*D*U
kbd.mat.matr.BruhatDecomposition = Bruhat decomposition
kbd.mat.matr.randomMatrix = random matrix with numbers: n=number of rows, m=number of columns, density=density in percents, bits= \u0447\u0438\u0441\u043b\u043e \u0431\u0438\u0442 \u0432 \u043a\u043e\u0435\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430\u0445
kbd.mat.matr.randomMatrixP = random matrix with polynomials: n=number of rows, m=number of columns, density=density in percents, (d1,..,dn, den,bits) - the type of random polynomials
kbd.mat.matr.submatrix = submatrix of matrix M with Nr rows (r1-first row) and Nc columns ( c1-first column),  
### Integer matrices  
kbd.mat.integ.title = Matrices over Z
kbd.mat.integ.LDUm =triangular factorization of this matrix: A=L*D*U
kbd.mat.integ.PLDUQWDK = permutation matrices P,Q;  factorization of A=P*l*d*u*Q and A^{-1}=Q^{T}*w*d*k*P^{T}
kbd.mat.integ.LDUWDK = triangular factorization of A=L*D*U and A^{-1}=W*D*K
kbd.mat.integ.WDK = triangular factorization of inverse matrix A^{-1}=W*D*K
### Integer matrices  
kbd.mat.lprog.title = Linear programming (Q,R64,R)
kbd.mat.lprog.SimplexMax = We find vector x: Ax<=b, c*x --> max
kbd.mat.lprog.SimplexMin = We find vector x: Ax<=b, c*x --> min


## Functions
kbd.func.title = Functions
### Functions with one argument
kbd.func.onearg.title = Elementary functions
kbd.func.onearg.ln = Natural logarithm
kbd.func.onearg.lg = Decimal logarithm
kbd.func.onearg.sin = Sine
kbd.func.onearg.cos = Cosine
kbd.func.onearg.tg = Tangent
kbd.func.onearg.ctg = Cotangent
kbd.func.onearg.arcsin = Arcsine
kbd.func.onearg.arccos = Arccosin
kbd.func.onearg.arctg = Arctangent
kbd.func.onearg.arcctg = Arccotangent
kbd.func.onearg.sh = Hyperbolic sine
kbd.func.onearg.ch = Hyperbolic cosine
kbd.func.onearg.th = Hyperbolic tangent
kbd.func.onearg.cth = Hyperbolic cotangent
kbd.func.onearg.arcsh = Hyperbolic arcsine
kbd.func.onearg.arcch = Hyperbolic arccosine
kbd.func.onearg.arcth = Hyperbolic arctangent
kbd.func.onearg.arccth = Hyperbolic arccotangent
kbd.func.onearg.exp = Exponential function
kbd.func.onearg.sqrt = Square root


### Function many arguments
kbd.func.many.title = Other functions  
kbd.func.many.log = Logarithm with given base
kbd.func.many.sqrt = nth root
kbd.func.many.Beta = Beta function
kbd.func.many.binom = Binomial coefficient
kbd.func.many.int = Integral
kbd.func.many.D = Derivative
kbd.func.many.Dwithvar = Derivative with respect to x
kbd.func.many.DwithvarN = Derivative of higher order n
kbd.func.many.lim = Limit
kbd.func.many.abs = Absolute value
kbd.func.many.sign = Sign of number and polynomial (the first coefficient)
kbd.func.many.fact = Factorial
kbd.func.many.Gamma = Gamma function
kbd.func.many.BESSELJ = BesselJ(n,x)
kbd.func.many.BESSELY = BesselY(n,x)
kbd.func.many.P2 = Legendre polynomials: LegendreP(n,x)=1/(2n) sum_{k=0}^{n}binom(n,k)^2(x-1)^{n-k}(x+1)^k 
kbd.func.many.P3 = Associated Legendre polynomials: LegendreP(n,m,x)=P_n^m(x)=(-1)^m(1-x^2)^{m/2}(d/d x^m)P(n,x)
kbd.func.many.Yr = sphericalHarmonicR(n,m,r,theta,phi)=r^n sphericalHarmonic(n,m,theta,phi)
kbd.func.many.Y =Spherical Harmonic: sphericalHarmonic(n,m,theta,phi)=[P(n,m,cos(theta))*cos(m*phi), P(n,m,cos(theta))*sin(m*phi)]. It is solution of Laplace's equation in spherical coordinates.
kbd.func.many.YrCart = sphericalHarmonicRCart(n,m,x,y,z)=r^n sphericalHarmonicCart(n,m,x,y,z), for r=sqrt(x^2+y^2+z^2)
kbd.func.many.YCart = Spherical Harmonic in Cartesian coordinates: sphericalHarmonicCart(n,m,x,y,z)=sphericalHarmonic(n,m,theta,phi) for r=sqrt(x^2+y^2+z^2), z=r*cos(theta), x=r*sin(theta)cos(phi), y=r*sin(theta)sin(phi)

### Function aglebraic manipulations
kbd.func.algebraic.title = Algebraic manipulations
kbd.func.algebraic.factor = factor
kbd.func.algebraic.expand = expand
kbd.func.algebraic.simplify = simplify

### Function transcendental manipulations
kbd.func.transcend.title = Transcendental manipulations
kbd.func.transcend.Factor = Factor
kbd.func.transcend.Expand = Expand
kbd.func.transcend.Simplify = Simplify

### Nonlinear systems and inequalities
kbd.func.nonlinear.title = Equations, inequalities and  systems of equations and inequalities
kbd.func.nonlinear.solveNAE = System of nonlinear algebraic equations: (f,g,...,h)
kbd.func.nonlinear.solveTrig = Trigonometric equation
kbd.func.nonlinear.solveIn = Nonlinear algebraic inequality
kbd.func.nonlinear.solveSI = Systems of inequalities
kbd.func.nonlinear.solveEquation =  solving an algebraic equation
kbd.func.nonlinear.solveSystemOfEquations = system of linear algebraic equations
kbd.func.nonlinear.solveSystemInMatrixForm = system of linear algebraic equations in matrix form
kbd.func.nonlinear.solveSystemWithOtherVariables = system of linear algebraic equations with other variables
kbd.func.nonlinear.value = value of function in the point

### Differential equations and systems
kbd.func.diff.title = Differential equations and systems
kbd.func.diff.solveLinearDE = Linear differential equations
kbd.func.diff.solveSystemOfLinearDE = Systems of linear differential equations

### Probability theory and statistics
kbd.func.prob.title = Probability theory
kbd.func.prob.discreteRandomQuantity = Assignment of a discrete random quantity
kbd.func.prob.Expectation = Expectation of a discrete random variable
kbd.func.prob.dispersion = Variance of a discrete random variable
kbd.func.prob.meanSquareDeviation = Standard deviation of a discrete random variable
kbd.func.prob.addQU = 	Sum of the two discrete random variables DRQ1 and DRQ2
kbd.func.prob.multiplyQU = Product of two discrete random variables DRQ1 and DRQ2
kbd.func.prob.covariance = Covariance coefficient of two discrete random variables DRQ1 and DRQ2
kbd.func.prob.correlation = Correlation coefficient of two discrete random variables DRQ1 and DRQ2
kbd.func.prob.plotPolygonDistribution = Building polygon distributions of discrete random variable DRQ
kbd.func.prob.plotDistributionFunction = Constructing the distribution function of discrete random variable DRQ
kbd.func.prob.simplifyQU = Simplify a discrete random variable

kbd.func.stat.title = Statistics
kbd.func.stat.sample = Assignment of a sample
kbd.func.stat.sampleMean = Sample mean of a sample
kbd.func.stat.sampleDispersion = Sample variance of a sample
kbd.func.stat.covarianceCoefficient = Coefficient of covariance for two samps S1 and S2
kbd.func.stat.correlationCoefficient = Correlation coefficient for  two samps S1 and S2

### Graph problems
kbd.func.graph.title = Graph problems
kbd.func.graph.plotGraphMatrix = \u0421onstruction graph with adjacency matrix M
kbd.func.graph.plotGraphAdMatrixCoord = \u0421onstruction graph with two arguments (M,P) Where M  is adjacency matrix, P  is matrix of vertex coordinates
kbd.func.graph.plotCompleteGraph = \u0421onstruction complete graph with the number N of vertices
kbd.func.graph.findTheShortestPath = Find the shortest path between vertices i and j: (M,i,j), M is adjacency matrix
kbd.func.graph.searchLeastDistances = Search least distances

### Calculations in the tropical semifields
kbd.func.tropfield.title = Idempotent (tropical) algebras
kbd.func.tropfield.R64MinPlus = Tropical semifield R64MinPlus
kbd.func.tropfield.solveLAETropic = Solving system of linear equations: Ax = b 
kbd.func.tropfield.solveLAITropic = Solving system of linear inequalities:  Ax \u2264 b
kbd.func.tropfield.BellmanEquation = Bellman matrix equation: Ax + b = x
kbd.func.tropfield.BellmanInequality= Bellman matrix inequality: Ax + b \u2264 x

### Calculations in the tropical semirings
kbd.func.tropring.title = Calculations in the tropical semirings

## Space
kbd.space.title = Space

### SPACEs
kbd.space.space.Z = Ring of integer numbers
kbd.space.space.Zp = Finite field Z/pZ. Set the module p with the MOD constant
kbd.space.space.Zp32 = Finite field with 32 bit words. Set the module p with the MOD32 constant
kbd.space.space.Z64 = Ring of integer numbers with 64 bit words
kbd.space.space.Q = Field of fractions over integer numbers Z
kbd.space.space.R = Real numbers
kbd.space.space.R64 = Real number which based on double type with 64 bit word
kbd.space.space.R128 = Floating-point 64-bit numbers equipped with optional 64-bit for the order
kbd.space.space.C = Complex numbers over R
kbd.space.space.C64 = Complex numbers over R64
kbd.space.space.C128 = Complex numbers over R128
kbd.space.space.CZ = Complex numbers over Z
kbd.space.space.CZp = Complex numbers over Zp
kbd.space.space.CZp32 = Complex numbers over Zp32
kbd.space.space.CZ64 = Complex numbers over Z64
kbd.space.space.CQ = Complex numbers over Q

### Constants
kbd.space.const.title = Constants
kbd.space.const.FLOATPOS = Number of decimal places after the decimal point, which should appear in the print (default = 2)
kbd.space.const.MachineEpsilonR64 = Machine Epsilon for number R64: binary places after the binary point (default = 36 bits)
kbd.space.const.MachineEpsilonR = Machine Epsilon for number R: decimal places after the decimal point (default = 29)
kbd.space.const.MachineEpsilonRAccuracy = MachineEpsilonR / Accuracy of rounding in arithmetic operations: decimal places after the decimal point (default = 29 / 34)
kbd.space.const.MOD = Module in the finite field Zp (default = 268435399)
kbd.space.const.MOD32 = Module in the finite field Zp32 (default = 268435399) must be less then 2^{31}
kbd.space.const.RADIAN = Indicator of the angles measure: 1 = radians, 0 = degrees (default = 1)
kbd.space.const.STEPBYSTEP = Print the intermediate results: 1 = on, 0= off (default = 0)
kbd.space.const.EXPAND = Automatically expand all brackets: 1 = on, 0 = off (default = 1)
kbd.space.const.SUBSTITUTION = Replace all of the names  by expressions, which were introduced earlier: 1 = on, 0 = off (default = 1)
kbd.space.const.TIMEOUT = Timeout for tasks in seconds. An integer number at range of [1sec.: 300sec.] (default value is 15 seconds).


## Math symbols and greek alphabet
kbd.symb.title = Symbols

### Numbers, sets, inequality
kbd.symb.symb0.title = Numbers, sets, inequality
kbd.symb.symb0.i = Imaginary unit
kbd.symb.symb0.e = The base of the natural logarithm
kbd.symb.symb0.pi = The ratio of length of a circle to it's diameter
kbd.symb.symb0.infty = Infinity
kbd.symb.symb0.emptyset = Empty set
kbd.symb.symb0.cup= Union of sets
kbd.symb.symb0.cap = Intersection of sets
kbd.symb.symb0.setminus = set minus
kbd.symb.symb0.triangle = set symmetric minus
kbd.symb.symb0.complement = complement to the set
kbd.symb.symb0.setOpen = open interval
kbd.symb.symb0.setClosed = closed interval
kbd.symb.symb0.setHalfOpen = half-open interval
kbd.symb.symb0.setHalfClosed = half-closed interval
kbd.symb.symb0.ne = not equal
kbd.symb.symb0.le = less or equal
kbd.symb.symb0.ge = greater or equal
kbd.symb.symb0.eq =   equal
kbd.symb.symb0.lor = boolean OR
kbd.symb.symb0.land = boolean AND
kbd.symb.symb0.neg = boolean NEGATE



### Other symbols
kbd.symb.symb.title = Other symbols
kbd.symb.symb.circ = Circle
kbd.symb.symb.partial = Partial derivative
kbd.symb.symb.nabla = Nabla
kbd.symb.symb.hbar = h crossed
kbd.symb.symb.to = Arrow
kbd.symb.symb.perp = Perpendicular
kbd.symb.symb.parallel = Parallel lines
kbd.symb.symb.angle = Angle
kbd.symb.symb.smile = Arc of a circle
kbd.symb.symb.equiv = Equivalence
kbd.symb.symb.square = Square
kbd.symb.symb.blacksquare = Black square
kbd.symb.symb.approx = Approximately equal
kbd.symb.symb.sim = Similarity
kbd.symb.symb.in = Belongs
kbd.symb.symb.notin = Not belong
kbd.symb.symb.owns Contains
kbd.symb.symb.subset = Subset
kbd.symb.symb.subseteq = Included
kbd.symb.symb.supset = Included
kbd.symb.symb.supseteq = Not strictly included
kbd.symb.symb.exists Exists
kbd.symb.symb.nexists = Not exist
kbd.symb.symb.forall = For all
kbd.symb.symb.neg = Logical negation
kbd.symb.symb.vee = Logical OR
kbd.symb.symb.wedge = Logical AND
kbd.symb.symb.oplus = Plus in  a circle
kbd.symb.symb.otimes = Multiplication in a circle
kbd.symb.symb.hat = Hat over the symbol
kbd.symb.symb.bar = Bar over the symbol
kbd.symb.symb.tilde = Tilde over the symbol
kbd.symb.symb.vec = Vector over the symbol
kbd.symb.symb.dot = Dot over the symbol
kbd.symb.symb.ddot = 2 dots over the symbol
kbd.symb.symb.widetilde = Tlde over the text
kbd.symb.symb.widehat = Hat over the text
kbd.symb.symb.overline = Line over the text
kbd.symb.symb.overrightarrow = Rightarrow over the text
kbd.symb.symb.underbrace = Underbrace under the text
kbd.symb.symb.overbrace = Overbrace over the text
kbd.symb.symb.frac =  fraction with two levels
kbd.symb.symb.system = system AND (equolities, inequolities)
kbd.symb.symb.systemOR = system OR (equolities, inequolities)

### Greek lowercase
kbd.symb.greek.lower.title = Greek lowercase
kbd.symb.greek.lower.alpha = alpha
kbd.symb.greek.lower.beta = beta
kbd.symb.greek.lower.gamma = gamma
kbd.symb.greek.lower.delta = delta
kbd.symb.greek.lower.epsilon = epsilon
kbd.symb.greek.lower.varepsilon = varepsilon
kbd.symb.greek.lower.zeta = zeta
kbd.symb.greek.lower.eta = eta
kbd.symb.greek.lower.theta = theta
kbd.symb.greek.lower.vartheta = vartheta
kbd.symb.greek.lower.iota = iota
kbd.symb.greek.lower.kappa = kappa
kbd.symb.greek.lower.varkappa = varkappa
kbd.symb.greek.lower.lambda = lambda
kbd.symb.greek.lower.mu = mu
kbd.symb.greek.lower.nu = nu
kbd.symb.greek.lower.xi = xi
kbd.symb.greek.lower.pi = pi
kbd.symb.greek.lower.varpi = varpi
kbd.symb.greek.lower.rho = rho
kbd.symb.greek.lower.varrho = varrho
kbd.symb.greek.lower.sigma = sigma
kbd.symb.greek.lower.varsigma = varsigma
kbd.symb.greek.lower.tau = tau
kbd.symb.greek.lower.upsilon = upsilon
kbd.symb.greek.lower.phi = phi
kbd.symb.greek.lower.varphi = varphi
kbd.symb.greek.lower.chi = chi
kbd.symb.greek.lower.psi = psi
kbd.symb.greek.lower.omega = omega

### Greek uppercase
kbd.symb.greek.upper.title = Greek uppercase
kbd.symb.greek.upper.Gamma = Gamma
kbd.symb.greek.upper.Delta = Delta
kbd.symb.greek.upper.Theta = Theta
kbd.symb.greek.upper.Lambda = Lambda
kbd.symb.greek.upper.Xi = Xi
kbd.symb.greek.upper.Pi = Pi
kbd.symb.greek.upper.Sigma = Sigma
kbd.symb.greek.upper.Upsilon = Upsilon
kbd.symb.greek.upper.Phi = Phi
kbd.symb.greek.upper.Psi = Psi
kbd.symb.greek.upper.Omega = Omega


## Graphics and tables
kbd.plot.title = Graphics and tables
kbd.plot.2d.title = 2D plots and tables
kbd.plot.2d.tableFromFile = Create a Table object from an uploaded file
kbd.plot.2d.table = Create a Table from matrix or other Table, axes signatures: ['x', 'y',..] and borders: [x1, x2, y1, y2]
kbd.plot.2d.approx = Approximation of Table or two vectors, X and Y, with polynomial of given degree
kbd.plot.2d.tablePlot = Plot of the table: (Table) or ([[x1,.., xn],[y1,..,yn]])
kbd.plot.2d.plot = Plot of function of one variable: (y(x), [x1, x2])
kbd.plot.2d.paramPlot = Parametric plot: ([x(t), y(t)], [t1, t2])
kbd.plot.2d.showPlots = Show several plots at single image: ([G1,.., Gn])
kbd.plot.3d.title = 3D plots
kbd.plot.3d.plot = Plot of 3D graph of explicit function 
kbd.plot.3d.implicitPlot1 = Plot of -x^2+2y^2+3z^2-25=0
kbd.plot.3d.implicitPlot2 = Plot of (x^2+y^2+z^2)^2-80xyz=0
kbd.plot.3d.explicitPlot1 = Plot of  z=(x^2+y^2)/20
kbd.plot.parm3d.title = Parametric 3D plots
kbd.plot.parm3d.Spiral = Parametric plot 3D: Spiral
kbd.plot.parm3d.Torus = Parametric plot 3D: Torus
kbd.plot.parm3d.Dini = Parametric plot 3D: Dini's surface

## Files, PDF export
kbd.files.title = Files
kbd.files.fromFile = Make Mathpar expression from content of uploaded file with given name
kbd.files.toFile = Save given Mathpar expression to file with given name
kbd.files.savepdf_tooltip = Save page as PDF file
kbd.files.savepdf = Save PDF
kbd.files.savetxt_tooltip = Save page as text file
kbd.files.savetxt = Save text
kbd.files.importtxt = Import text
kbd.files.select = Upload file


## Cluster
kbd.cluster.title = Cluster

### Cluster login form
kbd.cluster.login.title = Login
kbd.cluster.login.signup = Sign up
kbd.cluster.login.email_placeholder = Email
kbd.cluster.login.password_placeholder = Password

### Cluster constants
kbd.cluster.const.title = Constants 
kbd.cluster.const.TOTALNODES = Total number of nodes which provides for the computation
kbd.cluster.const.PROCPERNODE = Number of processors (cores) on a single node
kbd.cluster.const.MAXCLUSTERMEMORY = Maximum memory for java (-Xmx option)
kbd.cluster.const.CLUSTERTIME = Maximum time (in minutes) execution of the program, after which the program is forced to end

### Cluster functions
kbd.cluster.func.title = Functions
kbd.cluster.func.getStatus = Returns status of task with given taskId
kbd.cluster.func.getCalcResult = Returns result of successfully completed task with given taskId
kbd.cluster.func.matMultPar1x8 = Queues new task for matrix multiplication using 1x8 algorithm
kbd.cluster.func.BellmanEquationPar = Queues new task for solving the Bellman Equation: Ax=x



# Sections
sect.run = Run this section (also Ctrl-Enter at source code)
sect.toggle = Toggle output mode Mathpar\\LaTeX (also Ctrl-Alt-R at source code)
sect.add = Add new section below
sect.clear = Clear expressions (also Ctrl-Alt-C at source code)
sect.delete = Remove this section (also Ctrl-Del at source code)
sect.noresult = No result yet



# Welcome page
home.intro_title = MATH PARTNER
home.intro_text = will help you to solve mathematical problems. You can use Math Partner at school, at university, in scientific computations and engineering.
home.intro_to_workbook = mathematical workbook
home.intro_email = You can submit your remarks and propositions <a href="mailto:info@mathpar.com">by email</a>.


## Sections and subsections
home.s01_title = Acquaintance and first steps
home.s01_ss01 = Input data and run the calculations
home.s01_ss02 = Actions with functions
home.s01_ss03 = Solution of the algebraic equation
home.s01_ss04 = Vectors and matrices
home.s01_ss05 = Generation of random elements
home.s02_title = Construction of 2D and 3D plots
home.s02_ss01 = Plotting functions
home.s02_ss02 = Plots 3D of explicit functions
home.s02_ss03 = Plots 3D of implicit functions
home.s03_title = Environment for mathematical objects
home.s03_ss01 = Setting of environment
home.s03_ss02 = Numerical sets with standard operations
home.s03_ss03 = Several numerical sets
home.s03_ss04 = Group algebras
home.s03_ss05 = Idempotent algebra and tropical mathematics
home.s03_ss06 = Constants
home.s04_title = Functions of one and several variables
home.s04_ss01 = Mathematical functions
home.s04_ss02 = Calculation of the value of a function in a point
home.s04_ss03 = Substitution of functions instead of ring variables
home.s04_ss04 = Calculation of the limit of a function
home.s04_ss05 = Differentiation of functions
home.s04_ss06 = Integration of the compositions of elementary functions
home.s05_title = Series
home.s05_ss01 = Series
home.s06_title = Solution of differential equations
home.s06_ss01 = Solution of differential equations
home.s06_ss02 = Solution of systems of differential equations
home.s07_title = Polynomial computations
home.s07_ss01 = Calculation of the value of a polynomial at the point
home.s07_ss02 = Geometric progression. Summation of polynomial with respect to the variables
home.s07_ss03 = Groebner basis of polynomial ideal
home.s07_ss04 =
home.s08_title = Matrix functions
home.s08_ss01 = Calculation of the transposed matrix
home.s08_ss02 = Calculation of adjoint and inverse matrices
home.s08_ss03 = Calculation of the matrix determinant
home.s08_ss04 = Calculation of the conjugate matrix
home.s08_ss05 = Calculation of the generalized inverse matrix
home.s08_ss06 = Computation of the kernel and echelon form
home.s08_ss07 = Calculating the characteristic polynomial of matrix
home.s08_ss08 = Calculating LDU-decomposition of the matrix
home.s08_ss09 = Calculating Bruhat decomposition of the matrix
home.s09_title = The functions of the probability theory and statistics
home.s09_ss01 = Functions of the discrete random quantity
home.s09_ss02 = Function for sampling
home.s10_title = Operators of control. Procedural programming
home.s10_ss01 = Procedures and functions
home.s10_ss02 = Operators of branching and looping
home.s11_title = The calculations on a supercomputer
home.s11_ss01 = Parallel polynomial computations
home.s11_ss02 = Parallel matrix computations



# Contact (About) page
contact.title = MATH PARTNER
contact.text = Version 6.00 from 10/01/2016
contact.titleLTD = Mathparca LTD
contact.thanks = 
#Thank you for support
contact.grants = 
#<ul>\
#<li>Russian Foundation of Basic Research, 12-07-00755/13a (2012-2014)</li>\
#<li>IBM Country Project. Cloudy computations for scale symbolical-numerical calculations. (\u211609-11-700, 11.02.2011)</li>\
#<li>Ministry of Education and Science, AVCP 2.1.1/10437 (2011)</li>\
#<li>Ministry of Education and Science, AVCP 2.1.1/1853 (2009-2010)</li>\
#<li>Russian Foundation of Basic Research, 08-07-97507a (2008)</li>\
#<li>Russian Foundation of Basic Research, 04-07-90268\u0432 (2003-2006)</li>\
#<li>Universities of Russia, 04.01.051 (2004-2005)</li>\
#<li>Human Capital Foundation, 23-03-24 (Great Britain) (2004)</li>\
#</ul>



#Help
help.back_to_toc = Back to the table of contents
help.toc_title = Mathpar Help
